name: Backend

on:
  push:
    paths:
      - ".github/**"
      - "backend/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:backend"
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache poetry
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-1.8.2-0

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v4
        with:
          path: backend/.venv
          key: python-deps-${{ hashFiles('backend/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-dependencies.outputs.cache-hit != 'true'

      - name: Run flake8
        run: poetry run flake8

      - name: Run black
        run: poetry run black . --check

      - name: Run mypy
        run: poetry run mypy .

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_BACKEND }}
